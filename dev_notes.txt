# KeyboardAvoidingView Issue - Chat Input Positioning

## Problem Summary
I'm building a chat interface in Expo Router (React Native) and having trouble getting the input field to position correctly above the keyboard. When keyboard is OFF, positioning is perfect. When keyboard is ON, the input sits slightly below where it should be.

## What We've Tried So Far

### Attempt 1: Aggressive Manual Approach (FAILED)
```tsx
// Multiple timeouts and high offsets - caused chat to go too far up
<KeyboardAvoidingView 
  behavior='padding'
  keyboardVerticalOffset={Platform.OS === 'ios' ? 150 : 80}
>
  // Multiple scroll attempts with different delays
  useEffect(() => {
    const keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', () => {
      setTimeout(() => scrollViewRef.current?.scrollToEnd({ animated: true }), 10);
      setTimeout(() => scrollViewRef.current?.scrollToEnd({ animated: true }), 100);
      setTimeout(() => scrollViewRef.current?.scrollToEnd({ animated: true }), 200);
    });
  }, []);
</KeyboardAvoidingView>
```

### Attempt 2: Pure Expo Documentation Approach (BROKE SAFE AREAS)
```tsx
// Removed SafeAreaView completely - broke safe area handling
<KeyboardAvoidingView 
  style={{ flex: 1 }} 
  behavior={Platform.OS === 'ios' ? 'padding' : undefined}
>
  <ScrollView />
  <View /> // input
</KeyboardAvoidingView>
```

### Attempt 3: SafeAreaView Outside KeyboardAvoidingView (CONFLICTING PADDING)
```tsx
// Double padding caused input to go too high
<SafeAreaView edges={['bottom']}>
  <KeyboardAvoidingView behavior={Platform.OS === 'ios' ? 'padding' : undefined}>
    <ScrollView />
    <View /> // input
  </KeyboardAvoidingView>
</SafeAreaView>
```

### Attempt 4: KeyboardAvoidingView Outside SafeAreaView (STILL CONFLICTING)
```tsx
// Still had padding conflicts
<KeyboardAvoidingView behavior={Platform.OS === 'ios' ? 'padding' : undefined}>
  <SafeAreaView edges={['top', 'left', 'right', 'bottom']}>
    <ScrollView />
    <View /> // input
  </SafeAreaView>
</KeyboardAvoidingView>
```

## Current Implementation (ALMOST WORKING)
```tsx
// app/(drawer)/chat.tsx
export default function ChatScreen() {
  const colorScheme = useColorScheme();
  const theme = Colors[colorScheme ?? 'light'];
  
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputText, setInputText] = useState('');
  const scrollViewRef = useRef<ScrollView>(null);

  return (
    <SafeAreaView style={{ flex: 1 }}> {/* No edges specified */}
      <KeyboardAvoidingView 
        style={styles.container} 
        behavior={Platform.OS === 'ios' ? 'padding' : undefined}
      >
        <ScrollView
          ref={scrollViewRef}
          style={styles.messagesContainer}
          contentContainerStyle={styles.messagesContent}
          showsVerticalScrollIndicator={false}
          keyboardShouldPersistTaps="handled"
        >
          {messages.map((message) => (
            <MessageBubble key={message.id} message={message} />
          ))}
        </ScrollView>

        <View style={styles.inputContainer}>
          <View style={styles.inputWrapper}>
            <TextInput
              style={styles.textInput}
              placeholder="Type a message..."
              value={inputText}
              onChangeText={setInputText}
              multiline
              maxLength={500}
            />
            <Pressable style={styles.sendButton} onPress={sendMessage}>
              <Ionicons name="arrow-up" size={24} />
            </Pressable>
          </View>
        </View>
      </KeyboardAvoidingView>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1 },
  messagesContainer: { flex: 1 },
  messagesContent: { padding: 16, paddingBottom: 16 },
  inputContainer: {
    paddingHorizontal: 16,
    paddingVertical: 12,
    borderTopWidth: 1,
  },
  inputWrapper: {
    flexDirection: 'row',
    alignItems: 'center',
    borderRadius: 100,
    borderWidth: 1,
    paddingHorizontal: 20,
    paddingVertical: 12,
    minHeight: 56,
  },
  // ... other styles
});
```

## Android Configuration (app.json)
```json
{
  "expo": {
    "android": {
      "softwareKeyboardLayoutMode": "pan",
      "navigationBar": {
        "translucent": false
      }
    }
  }
}
```

## Current Status
- **Keyboard OFF**: Input positioned perfectly above system navigation bar ✅
- **Keyboard ON**: Input positioned slightly below where it should be ❌

## What I Need
The input field should sit exactly above the keyboard edge (not below it) while maintaining proper safe area handling for system navigation bars. The solution should work universally across devices using platform APIs, not hardcoded pixel values.

## Question
How can I fix the KeyboardAvoidingView to position the input exactly above the keyboard without breaking safe area handling? What's the correct hierarchy and configuration for SafeAreaView + KeyboardAvoidingView in this chat screen scenario?
